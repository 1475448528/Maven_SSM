<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
<mapper namespace="myth.book">
	
	<!--
		数据库属性和对象属性当不一致时，用来配置属性间的映射 resultMap="ta_book_type"
		如果表的属性和对象属性是一致的，就直接使用别名就可以了 resultType="typeAlias"
			一致的话，result标签都是可以不用写的，但是显然的id是必须要写的
	-->
	<!--<resultMap type="BookType" id="ta_book_type">
		<result column="type_name" property="type_name"/>
		<result column="sex" property="sex"/>
		<result column="father_type" property="father_type"/>
	</resultMap>-->

	<sql id="QueryWithParam">
		<if test="param_list!=null">
			<foreach collection="param_list" item="item" index="currentIndex"  separator=" and ">
				${item}
			</foreach>
		</if>
		<if test="param!=null">
			${param}
		</if>
	</sql>
<!--
	书类型的操作SQL
-->
	<insert id="insert_BookType" parameterType="BookType">
		insert into book_type(type_name,sex,father_type) values(#{type_name},#{sex},#{father_type})
	</insert>
	<update id="update_BookType" parameterType="BookType">
		update book_type
		<set>
			<if test="type_name!=null">type_name=#{type_name},</if>
			<if test="sex!=null">sex=#{sex},</if>
			<if test="father_type!=null">father_type=#{father_type},</if>
		</set>
		where book_type=#{book_type}
	</update>
	<delete id="delete_BookType" parameterType="BookType">
		delete from ebook.book_type where book_type=#{book_type}
	</delete>

	<select id="getOne_BookType" parameterType="long" resultType="BookType">
		select * from book_type where book_type=#{book_type}
	</select>
	<select id="getAll_BookType" resultType="BookType">
		select * from book_type
	</select>
	<select id="getAll_Param_BookType" parameterType="map" resultType="BookType">
		select * from book_type where
			<include refid="QueryWithParam"></include>
	</select>


	<!--
		关联关系
	 	type 表示返回类型（一方）
	-->
	<resultMap id="BookType_Book" type="BookType">
		<!--<id property="book_type" column=""/>
		<result property="" column=""/>-->

		<!--一对一映射 -->
		<!--<association property="" column="" javaType="">
			<id property="" column=""/>
			<result property="" column=""/>
		</association>
		-->
		<!--一对多映射 poperty 表示List集合对象的名字，ofType是集合中元素类型（多方）
			要配置所有属性不然会有错误（数据库的值反射不进去） 真几把麻烦
		-->
		<collection property="books" ofType="Book">
			<id property="book_id" column="book_id"/>
			<result property="book_name" column="book_name"/>
			<result property="author_id" column="author_id"/>
			<result property="cover" column="cover"/>
			<result property="introduce" column="introduce"/>
			<result property="book_type" column="book_type"/>
			<result property="create_time" column="create_time"/>
			<result property="all_varcharacter" column="all_varcharacter"/>
			<result property="book_status" column="book_status"/>
			<result property="write_status" column="write_status"/>
			<result property="click_num" column="click_num"/>
			<result property="read_num" column="read_num"/>
			<result property="income_num" column="income_num"/>
			<result property="income" column="income"/>
			<result property="score" column="score"/>

		</collection>
	</resultMap>
	<select id="link_book" parameterType="long" resultMap="BookType_Book">
		select b.* from book b,book_type t where t.book_type=#{book_type} and t.book_type=b.book_type
	</select>
<!--
	书的操作SQL 必要的就插入，其他的有默认值
-->
	<insert id="insert_Book" parameterType="Book">
		insert into book(author_id, cover, introduce, book_type, create_time, book_status, write_status)
		values(#{author_id},#{cover},#{introduce},#{book_type},#{create_time},#{book_status},#{write_status})
	</insert>
	<update id="update_Book" parameterType="Book">
		update book
		<set>
			<if test="cover!=null">cover=#{cover},</if>
			<if test="book_type!=null">book_type=#{book_type},</if>
			<if test="introduce!=null">introduce=#{introduce},</if>
			<if test="book_status!=null">book_status=#{book_status},</if>
			<if test="write_status!=null">write_status=#{write_status},</if>
			<if test="all_varcharacter!=null">all_varcharacter=#{all_varcharacter},</if>
			<if test="click_num!=null">click_num=#{click_num},</if>
			<if test="read_num!=null">read_num=#{read_num},</if>
			<if test="income_num!=null">income_num=#{income_num},</if>
			<if test="income!=null">income=#{income},</if>
			<if test="score!=null">score=#{score},</if>
		</set>
		where book_id=#{book_id}
	</update>
	<delete id="delete_Book" parameterType="Book">
		delete from ebook.book where book_id=#{book_id}
	</delete>

	<select id="getOne_Book" parameterType="long" resultType="Book">
		select * from book where book_id=#{book_id}
	</select>
	<select id="getAll_Book" resultType="Book">
		select * from book
	</select>
	<select id="getAll_Param_Book" parameterType="map" resultType="Book">
		select * from book where
			<include refid="QueryWithParam"></include>
	</select>
	<!--
		获取类型列表
		只能得到一个联表 得不到想要的结果，得换个方式
	-->
	<!--<resultMap id="Father_BookType" type="FatherType">
		<collection property="bookTypes" ofType="BookType">
			<id property="book_type" column="book_type"/>
			<result property="type_name" column="type_name"/>
			<result property="sex" column="sex"/>
			<result property="father_type" column="father_type"/>
		</collection>
	</resultMap>
	<select id="FatherType_List" resultMap="Father_BookType">
		select * from father_type f,book_type b where b.father_type=f.father_type_id
	</select>-->
	<select id="getAll_FatherType" resultType="FatherType">
		select * from father_type;
	</select>
</mapper>